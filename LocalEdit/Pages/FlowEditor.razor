@page "/FlowEditor"
@using Blazorise.Components
@using Blazorise.DataGrid
@using LocalEdit.C4Types
@using Blazorise
@using Blazorise.Extensions;
@using LocalEdit.FlowTypes

<h1>Flow Editor</h1> 
<hr/>

<Button Size="Size.Small" Color="Color.Primary" Clicked="@NewFlow">
    <Icon Name="IconName.Star" />
    New Flow
</Button>

<Button Size="Size.Small" Color="Color.Primary" Clicked="@LoadFile">
    <Icon Name="IconName.FileUpload" />
    Load
</Button>
<Button Size="Size.Small" Color="Color.Primary" Clicked="@LoadLpeFile">
    <Icon Name="IconName.FileUpload" />
    Load LPE
</Button>

<Button Size="Size.Small" Color="Color.Primary" Clicked="@SaveFile">
    <Icon Name="IconName.FileDownload" />
    Save
</Button>

    <Button Size="Size.Small" Color="Color.Primary" Clicked="@ExportFile">
        <Icon Name="IconName.ArrowRight" />
        Export Markdown Snippet
    </Button>
    <Button Size="Size.Small" Color="Color.Primary" Clicked="@ExportHtml">
        <Icon Name="IconName.ArrowRight" />
        Export HTML
    </Button>

@*
<button class="btn btn-primary" @onclick="LoadFile">Load</button>
<button class="btn btn-primary" @onclick="SaveFile">Save</button>
*@
@*</Div>*@

@*<ListView @ref="fiList" TItem="FlowItem"
          Data="FlowItems"
          TextField="(item) => item.Label"
          ValueField="(item) => item.ID"
          Mode="ListGroupMode.Selectable"
          Color="Color.Default"
          MaxHeight="300px"
          SelectedItem="selectedItem"
>
</ListView>
*@

<Tabs SelectedTab="@selectedTab" SelectedTabChanged="@OnSelectedTabChanged">
    <Items>
        <Tab Name="general">General</Tab>
        <Tab Name="model">Model</Tab>
        <Tab Name="relations">Relations</Tab>
        <Tab Name="preview">Preview</Tab>
    </Items>
    <Content>
        <TabPanel Name="general"  Border="Border.Primary">
</TabPanel>
        <TabPanel Name="model"  Border="Border.Primary">
<Button Size="Size.Small" Color="Color.Primary" Clicked="@AddNewItem">
    <Icon Name="IconName.Add" />
    New
</Button>
@if (selectedItemRow == null)
{
    <Button Size="Size.Small" Color="Color.Primary" Disabled>
        <Icon Name="IconName.Edit" />
        Edit
    </Button>
}
@if (selectedItemRow != null)
{
    <Button Size="Size.Small" Color="Color.Primary" Clicked="@ShowItemModal">
        <Icon Name="IconName.Edit" />
        Edit
    </Button>
}

@if (selectedItemRow == null)
{
    <Button Size="Size.Small" Color="Color.Primary" Disabled>
    <Icon Name="IconName.Delete" />
    Delete
</Button>
}
@if (selectedItemRow != null)
{
    <Button Size="Size.Small" Color="Color.Primary" Clicked="@DeleteItem">
    <Icon Name="IconName.Delete" />
    Delete
</Button>
}


<DataGrid TItem="FlowItem"
          Data="@Document.Items"
          @bind-SelectedRow="@selectedItemRow"
          Responsive>
    <DataGridColumn Field="@nameof( FlowItem.Label )" Editable="false"></DataGridColumn>
</DataGrid>

</TabPanel>
        <TabPanel Name="relations"  Border="Border.Primary">
<Button Size="Size.Small" Color="Color.Primary" Clicked="@AddNewRelationship">
    <Icon Name="IconName.Add" />
    New
</Button>
@if (selectedRelationshipRow == null)
{
    <Button Size="Size.Small" Color="Color.Primary" Disabled>
        <Icon Name="IconName.Edit" />
        Edit
    </Button>
}
@if (selectedRelationshipRow != null)
{
    <Button Size="Size.Small" Color="Color.Primary" Clicked="@ShowRelationshipModal">
        <Icon Name="IconName.Edit" />
        Edit
    </Button>
}

@if (selectedRelationshipRow == null)
{
    <Button Size="Size.Small" Color="Color.Primary" Disabled>
    <Icon Name="IconName.Delete" />
    Delete
</Button>
}
@if (selectedRelationshipRow != null)
{
    <Button Size="Size.Small" Color="Color.Primary" Clicked="@DeleteRelationship">
    <Icon Name="IconName.Delete" />
    Delete
</Button>
}




            <DataGrid TItem="FlowRelationship"
          Data="@Document.Relationships"
          @bind-SelectedRow="@selectedRelationshipRow"
          Responsive>
          <DataGridColumns>
    <DataGridColumn Field="@nameof( FlowRelationship.From )" Editable="false">
        <DisplayTemplate>
            @{
                string fromCode = ( context as FlowRelationship )?.From;
                string toCode = ( context as FlowRelationship )?.To;

                    if (fromCode != null)
                    {
                        @($"{DecodeFlowId(fromCode)}") <NBSP/> <Icon Name="IconName.ArrowRight"/> <NBSP/> @($"{DecodeFlowId(toCode)}")
                        <br />
                        <span style="padding-left:2em">@($"{context.Label}")</span>
                    }
                //if ( date != null )
                //{
                //    @($"{date.Value.ToShortDateString()} | Age: {( DateTime.Now.Year - date.Value.Year )}")
                //}
            }
        </DisplayTemplate>
    </DataGridColumn>
    </DataGridColumns>
    <EmptyTemplate>
        <div class="box">
            No relations were found!
        </div>
    </EmptyTemplate>
</DataGrid>
</TabPanel>
        <TabPanel Name="preview"  Border="Border.Primary">
@*<button class="btn btn-primary" @onclick="GenerateMarkdown">Generate</button>*@

@*
<div>
    <textarea @bind="MarkdownText" @bind:event="oninput" style="width:100%;"/>
</div>
*@

<StardustDL.RazorComponents.Markdown.MarkdownRenderer
    @ref="markdownRef"
    Value="@MarkdownText"
    Class="your class"
    Style="your styles"
    />
</TabPanel>
    </Content>
</Tabs>

@*
<StardustDL.RazorComponents.Markdown.MarkdownRenderer
    Value="@MarkdownText"
    Class="your class"
    Style="your styles"
    RenderInterval="@TimeSpan.FromSeconds(10)"/>
*@

<LocalEdit.Modals.FlowItemModal @ref="flowItemModalRef" Closed="@OnFlowItemModalClosed"></LocalEdit.Modals.FlowItemModal>

<LocalEdit.Modals.FlowRelationshipModal @ref="flowRelationshipModalRef" Items="@Document.Items" Closed="@OnFlowRelationshipModalClosed"></LocalEdit.Modals.FlowRelationshipModal>

<LocalEdit.Modals.FileManagementModal  @ref="fileManagementModalRef" Closed="@OnFileManagementModalClosed"></LocalEdit.Modals.FileManagementModal>
