@using LocalEdit.QuestionFlowTypes;
@using Blazorise.DataGrid

@inherits LE_ModalBase
<Modal @ref="modalRef" @bind-Visible="@modalVisible" Closing="@OnModalClosing" Opened="@OnModalOpened">
    <ModalContent Centered>
        <ModalHeader>
            <ModalTitle>Question Flow Item Edit</ModalTitle>
            <CloseButton />
        </ModalHeader>
        <ModalBody>
            @*https://blazorise.com/docs/components/validation*@
            @*<Validations Mode="ValidationMode.Manual">*@
            <Validations @ref="validations" Mode="ValidationMode.Manual" ValidateOnLoad=false>
                <Blazorise.ValidationSummary Label="The following errors were found..." />
                @*    <Field>
                    <FieldLabel>Name with validation</FieldLabel>
                    <Validation Validator="ValidationRule.IsNotEmpty">
                    <Blazorise.TextEdit Placeholder="Enter name (validated)">
                    <Feedback>
                    <ValidationNone>Please enter the name.</ValidationNone>
                    <ValidationSuccess>Name is good.</ValidationSuccess>
                    <ValidationError>Enter valid name!</ValidationError>
                    </Feedback>
                    </Blazorise.TextEdit>
                    </Validation>
                    </Field>
                *@
                <Field>
                    <FieldLabel>Label</FieldLabel>
                    <Validation Validator="ValidationRule.IsNotEmpty">
                        <TextEdit @bind-Text="item.Label" Placeholder="Enter label">
                            <Feedback>
                                <ValidationError>Please enter the label.</ValidationError>
                            </Feedback>
                        </TextEdit>
                    </Validation>
                </Field>

@*                <Field>
                    <FieldLabel>Description</FieldLabel>
                    <TextEdit @bind-Text="item.Description" Placeholder="Enter description" />
                </Field>
*@
<hr />
                <Button Size="Size.Small" Color="Color.Primary" Clicked="@AddNewRelationship">
                    <Icon Name="IconName.Add" />
                    New
                </Button>
                @if (selectedRelationshipRow == null)
                {
                    <Button Size="Size.Small" Color="Color.Primary" Disabled>
                        <Icon Name="IconName.Edit" />
                        Edit
                    </Button>
                }
                @if (selectedRelationshipRow != null)
                {
                    <Button Size="Size.Small" Color="Color.Primary" Clicked="@ShowRelationshipModal">
                        <Icon Name="IconName.Edit" />
                        Edit
                    </Button>
                }

                @if (selectedRelationshipRow == null)
                {
                    <Button Size="Size.Small" Color="Color.Primary" Disabled>
                        <Icon Name="IconName.Delete" />
                        Delete
                    </Button>
                }
                @if (selectedRelationshipRow != null)
                {
                    <Button Size="Size.Small" Color="Color.Primary" Clicked="@DeleteRelationship">
                        <Icon Name="IconName.Delete" />
                        Delete
                    </Button>
                }

                <DataGrid TItem="QuestionFlowRelationship"
                          Data="@item.NextQuestions"
                          @bind-SelectedRow="@selectedRelationshipRow"
                          Responsive>
                    <DataGridColumns>
                        <DataGridColumn Field="@nameof( QuestionFlowRelationship.Label )" Editable="false" />
                        <DataGridColumn Field="@nameof( QuestionFlowRelationship.To )" Editable="false" />
                    </DataGridColumns>
                    <EmptyTemplate>
                        <div class="box">
                            No relations were found!
                        </div>
                    </EmptyTemplate>
                </DataGrid>
            </Validations>
        </ModalBody>
        <ModalFooter>
            <Button Color="Color.Secondary" Clicked="@CloseModal">Cancel</Button>
            <Button Color="Color.Primary" Clicked="@TryCloseModal">Save</Button>
        </ModalFooter>
    </ModalContent>
</Modal>

<LocalEdit.Modals.QuestionFlowRelationshipModal @ref="QuestionFlowRelationshipModalRef" Items="@Items" Closed="@OnQuestionFlowRelationshipModalClosed"></LocalEdit.Modals.QuestionFlowRelationshipModal>
